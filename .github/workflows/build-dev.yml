name: build-dev

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
  workflow_dispatch:

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: dev
      
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          
      - run: npm install --save @flybywiresim/fragmenter

      - run: node script/index.js

      - run: git tag -d development || true

      - run: git push origin :development || true
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: development
          release_name: Release development
          draft: false
          prerelease: false

      - name: upload modules.json
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build-modules/modules.json
          asset_name: modules.json
          asset_content_type: application/json

      - name: upload base.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build-modules/base.zip
          asset_name: base.zip
          asset_content_type: application/zip

      - name: upload full.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build-modules/full.zip
          asset_name: full.zip
          asset_content_type: application/zip
